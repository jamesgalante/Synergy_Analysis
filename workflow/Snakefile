
configfile: "config/config.yaml"


active_cell_types = [cell_type for cell_type, status in config["cell_types_to_run"].items() if status == "ON"]
rule all:
  input:
    expand("results/synergy_predictions_{cell_type}.tsv", cell_type = active_cell_types)


rule download_hic:
  output:
    hic = config["scratch_storage"] + "{cell_type}.hic"
  params:
    url = lambda wildcards: config["download_hic"][wildcards.cell_type]
  shell:
    """
    wget {params.url} -O {output.hic}
    """


rule download_encode_predictions:
  output:
    predictions = "resources/encode_predictions_{cell_type}.bed"
  params:
    url = lambda wildcards: config["encode_predictions"][wildcards.cell_type]
  shell:
    """
    wget {params.url} -O {output.predictions}.gz
    gunzip {output.predictions}.gz
    """

  
rule pair_encode_predictions:
  input:
    predictions = "resources/encode_predictions_{cell_type}.bed"
  output:
    paired_predictions = "results/paired_encode_predictions_{cell_type}.tsv"
  params:
    distance_threshold = config["thresholds"]["distance"],
    ENCODE_Score_threshold = config['thresholds']['ENCODE_Score']
  conda:
    "envs/all_packages.yml"
  resources:
    mem = "32G",
    time = "1:00:00"
  script:
    "scripts/pair_encode_predictions.R"
    
    
rule compute_hic_contacts_per_chrom:
  input:
    paired_predictions = "results/paired_encode_predictions_{cell_type}.tsv",
    hic = config["scratch_storage"] + "{cell_type}.hic"
  output:
    paired_predictions_with_hic_per_chrom = "results/per_chrom_predictions_w_contact_{cell_type}_{chrom}.tsv"
  params:
    hic_res = config['thresholds']['hic_res']
  conda:
    "envs/hic_contact.yml"
  resources: 
    mem = "64G", 
    time = "4:00:00"
  script:
    "scripts/compute_hic_contacts.py"
    
    
rule combine_hic_contact_chroms:
  input:
    paired_predictions_with_hic_per_chrom = expand("results/per_chrom_predictions_w_contact_{{cell_type}}_{chrom}.tsv", chrom = ["chr" + str(i) for i in range(1, 23)] + ["chrX"])
  output:
    paired_predictions_with_hic = "results/predictions_w_contact_{cell_type}.tsv"
  conda:
    "envs/all_packages.yml"
  resources: 
    mem = "32G", 
    time = "2:00:00"
  script:
    "scripts/combine_hic_contact_chroms.R"
  
  
rule compute_synergy_predictions:
  input:
    paired_predictions_with_hic = "results/predictions_w_contact_{cell_type}.tsv"
  output:
    synergy_predictions = "results/synergy_predictions_{cell_type}.tsv",
    contact_statistics = "results/contact_statistics_{cell_type}.pdf",
    p300_statistics = "results/p300_statistics_{cell_type}.pdf",
    distance_statistics = "results/distance_statistics_{cell_type}.pdf"
  params:
    EE_distance_threshold = config['thresholds']['EE_distance'],
    p300_threshold = config['thresholds']['p300'],
    EE_contact_threshold = config['thresholds']['EE_contact']
  conda:
    "envs/all_packages.yml"
  resources:
    mem = "32G",
    time = "2:00:00"
  script:
    "scripts/compute_synergy_predictions.R" 
